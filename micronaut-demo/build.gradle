plugins {
	id "io.spring.dependency-management" version "1.0.6.RELEASE"
	id "com.github.johnrengelman.shadow" version "4.0.2"
	id "net.ltgt.apt-eclipse" version "0.18"
	id "net.ltgt.apt-idea" version "0.18"
}

apply plugin:"application"
apply plugin:"java"
apply plugin:"eclipse"
apply plugin:"groovy"

version "0.1"
group "com.ies.curso.dia2.demo2"

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
	imports { mavenBom 'io.micronaut:micronaut-bom:1.0.1' }
}

sourceSets {
	main {
		java { srcDirs = []}    // no source dirs for the java compiler
		groovy { srcDir "src/main/java" }  // compile everything in src/ with groovy
	}
}

dependencies {
	annotationProcessor "io.micronaut:micronaut-inject-java"
	annotationProcessor "io.micronaut:micronaut-validation"
	compile "io.micronaut:micronaut-inject"
	compile "io.micronaut:micronaut-validation"
	compile "io.micronaut:micronaut-runtime"
	compile "io.micronaut:micronaut-http-client"
	compile "io.micronaut:micronaut-http-server-netty"
	//compileOnly "io.micronaut:micronaut-inject-java"
	runtime "ch.qos.logback:logback-classic:1.2.3"
	testCompile "junit:junit:4.12"
	testCompile "io.micronaut:micronaut-inject-java"
	testCompile "org.hamcrest:hamcrest-all:1.3"

	//Groovy
	compile "io.micronaut:micronaut-runtime-groovy"
	compile "io.micronaut:micronaut-validation"
	compileOnly "io.micronaut:micronaut-inject-groovy"
	runtime "ch.qos.logback:logback-classic:1.2.3"
	testCompile "io.micronaut:micronaut-inject-groovy"
	testCompile("org.spockframework:spock-core") {
		exclude group: "org.codehaus.groovy", module: "groovy-all"
	}

	//GORM
	compile "io.micronaut.configuration:micronaut-hibernate-validator"
	compile "io.micronaut.configuration:micronaut-hibernate-gorm"

	runtime "com.h2database:h2:1.4.196"
	runtime "org.apache.tomcat:tomcat-jdbc:8.0.44"
}

shadowJar { mergeServiceFiles() }

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "com.ies.curso.dia2.demo2.Application"
/*tasks.withType(JavaCompile){
 options.encoding = "UTF-8"
 options.compilerArgs.add('-parameters')
 }*/
tasks.withType(GroovyCompile) {
	groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}
